\documentclass[11pt]{jgsyllabus}
\usepackage{booktabs}
%\usepackage{tabularx}
\usepackage{multirow}

\setlength{\aboverulesep}{0.2ex}
\setlength{\belowrulesep}{0.2ex}
\setlength{\extrarowheight}{0.1ex}
\setlength{\heavyrulewidth}{1pt}
\setlength{\lightrulewidth}{0.05pt}
\setlength\emergencystretch{\hsize}

\newif\ifreading
\readingtrue

\iffalse
\include{CourseInfo}
\fi
<<r setup, include=F>>=
library(pacman)
p_load(knitr)
p_load(RSQLite)
p_load(tidyverse, magrittr, stringr, lubridate)
p_load(xtable)
p_load(assertthat)
@
<<r import_schedule, include=F>>=
chapterpages <- function(chapter, pages, textbook, handout) {
  result = ''
  if (handout) {
    result = paste0(result, '\\ (Handout)')
  }
  if (!is.na(chapter)) {
    result = paste0(result, ', Ch.~', chapter)
  }
  if (!is.na(pages)) {
    result = paste0(result, ifelse(str_detect(pages, '[,- ]'), ', pp.~', ', p.~'))
  }
  result
}

format_reading_item <- function(df) {
  df %>% rowwise() %>%
    mutate(reading = str_c(
      ifelse(rd_break_before, '\\\\',''),
      short_latex_title,
      chapterpages(chapter, pages, textbook, handout)
    )) %>%
    ungroup()
}


# calendar <- read_excel('../../Syllabus/Class Schedule.xlsx', 1)
semester_db <- src_sqlite('EES_3310_5310_Class_Schedule.sqlite3')

reading <- tbl(semester_db, 'reading_assignments') %>%
  select(topic_id, reading_id, reading = short_reading) %>%
  collect() %>%
  mutate(reading = str_replace_all(reading, c('^\\\\\\\\'='', ' +(\\\\\\\\)' = '\\1')))

calendar <- semester_db %>% tbl('calendar') %>%
  collect() %>% left_join(reading, by = 'topic_id') %>%
  arrange(class) %>%
  mutate(date = ymd(date), weekday = wday(date, label = TRUE), month = month(date, label = TRUE), day = mday(date)) %>%
  select(class, date, weekday, month, day, topic, reading, event = event_id)

midterm <- calendar %>% filter(event %in% c('MIDTERM_TEST', 'MIDTERM_EXAM')) %>% select(class, date, weekday, month, day, topic, event)
fall_break <- calendar %>% filter(event == 'FALL_BREAK') %>% select(class, date, weekday, month, day, topic, event)
spring_break <- calendar %>% filter(event == 'SPRING_BREAK') %>% select(class, date, weekday, month, day, topic, event)
thanksgiving_break <- calendar %>% filter(event == 'THANKSGIVING_BREAK') %>% select(class, date, weekday, month, day, topic, event)
final_exam <- calendar %>% filter(event == 'FINAL_EXAM') %>% select(class, date, weekday, month, day, topic, event)
alt_final_exam <- calendar %>% filter(event == 'ALT_FINAL_EXAM') %>% select(class, date, weekday, month, day, topic, event)


# calendar <- semester_db %>% tbl('calendar') %>% select(-cal_id, -week) %>%
#   mutate(date = date(date)) %>%
#   arrange(date) %>%
#   collect() %>%
#   mutate(seq = seq(n()))
# reading_assignments <- semester_db %>% tbl('reading_assignments') %>%
#   select(topic_id, short_reading, reading, reading_notes, extra_reading) %>%
#   collect()
# reading_assignments <- reading_assignments %>%
#   left_join(calendar, by = 'topic_id') %>%
#   select(class, date, topic_id, topic, short_reading, reading, reading_notes, extra_reading)
# notices <- semester_db %>% tbl('notices') %>% select(topic_id, notice) %>%
#   collect()
# notices <- notices %>%
#   left_join(calendar, by = 'topic_id') %>% select(class, date, topic_id, topic, notice)
# homework_assignments <- semester_db %>% tbl('homework') %>%
#   select(homework_id, short_homework, homework, homework_notes, graduate_only, undergraduate_only) %>%
#   collect()
# homework_topics <- semester_db %>% tbl('homework_topics') %>%
#   collect()
# homework_assignments <- homework_assignments %>%
#   left_join(homework_topics, by = 'homework_id') %>%
#   left_join(calendar, by = 'homework_id') %>%
#   select(class, date, homework_id, topic_id, homework_topic, short_homework, homework, homework_notes, graduate_only, undergraduate_only) %>%
#   mutate(graduate_only = (graduate_only != 0), undergraduate_only = (undergraduate_only != 0))
# calendar <- calendar %>%
#   left_join(reading_assignments %>% select(topic_id, short_reading, reading, reading_notes, extra_reading), by = 'topic_id') %>%
#   left_join(homework_assignments %>% select(homework_id, homework, homework_topic), by = 'homework_id') %>%
#   left_join(notices %>% select(topic_id, notice), by = 'topic_id') %>%
#   mutate(has_reading = ! (is.na(reading) & is.na(reading_notes) & is.na(extra_reading)),
#          has_notice = ! is.na(notice), has_homework = ! is.na(homework)) %>%
#   select(-reading, -reading_notes, -extra_reading, -notice, -homework) %>%
#   group_by_(.dots = names(.)[!str_detect(names(.), '^has')]) %>%
#   summarize_all(funs(any(.))) %>%
#   ungroup() %>%   distinct() %>%
#   mutate(homework_num = cumsum(has_homework))

# midsterm <- calendar %>% filter(event %in% c('MIDTERM_TEST', 'MIDTERM_EXAM')) %>% select(class, date, topic, event)
# thanksgiving <- calendar %>% filter(event == 'THANKSGIVING_BREAK') %>% select(date, topic, event)
# fall_break <- calendar %>% filter(event == 'FALL_BREAK') %>% select(date, topic, event)
# final_exam <- calendar %>% filter(event == 'FINAL_EXAM') %>% select(date, topic, event)
# alt_final_exam <- calendar %>% filter(event == 'ALT_FINAL_EXAM') %>% select(date, topic, event)



select_class <- function(calendar, class_no) {
  class <- calendar %>% filter(class == class_no) %>% select(class, date, topic) %>%
    mutate(weekday = wday(date, label = TRUE), long.weekday = wday(date, label = TRUE, abbr = FALSE),
           month = month(date, label = TRUE), long.month = month(date, label = TRUE, abbr = FALSE),
           day = day(date))
  as.list(class)
}

this_sheet <- 1
this_sheet_revision <- NA
first_class <- 1
last_class <- NA

if(is.na(first_class)) first_class <- min(calendar$class, na.rm = T)
if (is.na(last_class)) last_class <- max(calendar$class, na.rm = T)

first_date <- calendar %>% filter(class == first_class) %>% select(date) %>% unlist() %>% lubridate::as_date()
last_date <- calendar %>% filter(class == last_class) %>% select(date) %>% unlist() %>% lubridate::as_date()

year_taught <- year(first_date)

format_sheet_number <- function() {
  ifelse(is.null(this_sheet_revision), this_sheet,
         paste0(this_sheet, " (", this_sheet_revision, ")"))
}

format_month <- function(d, abbr = TRUE) {
  m <- month(d, label = TRUE, abbr = abbr)
  if (abbr) m <- paste0(m, '.')
  m
}

format_wday <- function(d, abbr = TRUE) {
  wd <- wday(d, label = TRUE, abbr = abbr)
  if (abbr) wd <- paste0(wd, '.')
  wd
}

format_class_date <- function(d, abbr = TRUE) {
  paste0(format_month(d, abbr = abbr), "~", day(d))
}

format_class_day_date <- function(d, abbr_month = TRUE, abbr_wday = TRUE) {
  paste0(format_wday(d, abbr_wday), ", ",
         format_month(d, abbr_month), "~", day(d))
}

format_date_range_by_class_no <- function(calendar, classes, abbr = TRUE) {
  dates <- calendar %>% filter(class %in% na.omit(classes)) %>%
    summarize(start = min(date, na.rm = T), stop = max(date, na.rm = T))
  with(dates, {
    output <- format_class_date(start, abbr)
    if(start != stop) {
      output <- paste0(str_trim(output), '--',
             ifelse(month(stop) == month(start), day(stop),
                    format_class_date(stop, abbr)))
    }
  output
  })
}

format_date_range_by_topic_id <- function(calendar, topics, abbr = TRUE) {
  dates <- calendar %>% filter(topic_id %in% topics) %>%
    summarize(start = min(date, na.rm = T), stop = max(date, na.rm = T))
  with(dates, {
    output <- format_class_date(start, abbr)
    if(start != stop) {
      output <- paste0(str_trim(output), '--',
             ifelse(month(stop) == month(start), day(stop),
                    format_class_date(stop, abbr)))
    }
  })
  output
}

format_date_range_by_event_id <- function(calendar, event_ids, abbr = TRUE) {
  dates <- calendar %>% filter(event %in% event_ids) %>%
    select(date) %>% summarize(start = min(date, na.rm = T), stop = max(date, na.rm = T))
  with(dates, {
    output <- format_class_date(start, abbr)
    if(start != stop) {
      output <- paste0(str_trim(output), '--',
             ifelse(month(stop) == month(start), day(stop),
                    format_class_date(stop, abbr)))
    }
  output
  })
}

format_day_date_range_by_event_id <- function(calendar, event_ids, abbr_month = TRUE, abbr_wday = TRUE) {
  dates <- calendar %>% filter(event %in% event_ids) %>%
    select(date) %>% summarize(start = min(date, na.rm = T), stop = max(date, na.rm = T))
  with(dates, {
    output <- format_class_day_date(start, abbr_month, abbr_wday)
    if (start != stop) {
      output <- paste0(output, '--',
                       format_class_day_date(stop, abbr_wday))
    }
  output})
}


append_newline_if_needed <- function(txt) {
  txt <- str_trim(txt)
  txt[str_detect(txt, '[^\n]$')] <- str_c(txt, '\n')
  txt
}

make_section <- function(cal_entry) {
  d <- cal_entry$date
  paste0('\\section[',
         format_class_date(d, abbr = TRUE),
         ']{',
         format_class_day_date(d, TRUE, TRUE),
         ': ',
         cal_entry$topic,
         '}\n')
}

make_reading_assignment <- function(reading_entry) {
  output <- '\\subsection{Reading}'
  if (is.na(reading_entry$reading)) {
    output <- paste(str_trim(output),
                   'No new reading for today.',
                   '', sep = '\n')
  } else {
    output <- paste(str_trim(output),
                   '\\begin{itemize}',
                   str_trim(reading_entry$reading),
                   '\\end{itemize}',
                   '', sep = '\n')
  }
    if (! is.na(reading_entry$extra_reading)) {
    output <- paste(str_trim(output),
                    '\\subsection{Optional Extra Reading}',
                    '\\begin{itemize}',
                    append_newline_if_needed(reading_entry$extra_reading),
                    '\\end{itemize}',
                    '', sep = '\n'
    )
  }
  if (! is.na(reading_entry$reading_notes)) {
    output <- with(reading_entry,
                   paste(str_trim(output), '',
                    ifelse(is.na(reading) & is.na(extra_reading),
                           '\\subsection{Notes}',
                           '\\subsection{Reading Notes}'),
                    str_trim(reading_notes),
                    '', sep = '\n'))
  }
  output
}

make_homework_assignment <- function(homework_entries) {
  grad_hw <- homework_entries %>% filter(graduate_only & ! is.na(homework))
  ugrad_hw <- homework_entries %>% filter(undergraduate_only & ! is.na(homework))
  everyone_hw <- homework_entries %>% filter(!graduate_only & ! undergraduate_only & ! is.na(homework))
  grad_notes <- homework_entries %>% filter(graduate_only & ! is.na(homework_notes))
  ugrad_notes <- homework_entries %>% filter(undergraduate_only & ! is.na(homework_notes))
  everyone_notes <- homework_entries %>% filter(!graduate_only & ! undergraduate_only & ! is.na(homework_notes))
  output <- paste('\\subsection{Homework}',
         'A the beginning of class today, turn in the following homework:',
         '\\begin{itemize}',
         '', sep = '\n')
    if (nrow(ugrad_hw) > 0) {
      output <- paste(str_trim(output),
                       str_c('\\item \\textbf{Undergraduate Students:} ',
                             str_trim(ugrad_hw$homework)),
                      '', sep = '\n')
    }
    if (nrow(grad_hw) > 0) {
      output <- paste(str_trim(output),
                       str_c('\\item \\textbf{Graduate Students:} ',
                             str_trim(grad_hw$homework)),
                      '', sep = '\n')
    }
    if (nrow(everyone_hw) > 0) {
      output <- paste0(str_trim(output),
                       str_c('\\item \\textbf{Everyone:} ',
                             str_trim(everyone_hw$homework)),
                       '', sep = '\n')
    }
    output <- paste(str_trim(output),
                    '\\end{itemize}',
                    '', sep = '\n')

    if (nrow(grad_notes) > 0 || nrow(ugrad_notes) > 0 || nrow(everyone_notes) > 0) {
      output <- paste(str_trim(output),
                      '\\subsection{Notes on Homework}\n',
                      '', sep = '\n')
      if (nrow(everyone_notes) > 0) {
        output <- paste(str_trim(output),
                        str_trim(everyone_notes$homework_notes),
                        '', sep = '\n')
      }
      if (nrow(grad_notes) > 0 || nrow(ugrad_notes) > 0) {
        output <- paste(str_trim(output),
                        '\\begin{itemize}',
                        '', sep = '\n')
        if (nrow(ugrad_notes) > 0) {
          output <- paste(str_trim(output),
                          str_c('\\item \\textbf{Undergraduate Students:} ',
                                str_trim(ugrad_notes$homework_notes)),
                          '', sep = '\n')
        }
        if (nrow(grad_notes) > 0) {
          output <- paste(str_trim(output),
                          str_c('\\item \\textbf{Graduate Students:} ',
                                str_trim(grad_notes$homework_notes)),
                          '', sep = '\n')
        }

        output <- paste(str_trim(output),
                        '\\end{itemize}',
                        '', sep = '\n')
      }
    }
    output
}

make_hw_section <- function(cal_entry) {
  d <- cal_entry$date
  paste0('\\section[',
         format_class_date(d, abbr = TRUE),
         ']{',
         format_class_day_date(d, TRUE, TRUE),
         ': ',
         paste0('Homework \\#', cal_entry$homework_num, ': ', cal_entry$homework_topic),
         '}\n')
}

make_short_hw_assignment <- function(cal_entry) {
  d <- cal_entry$date
  paste( "\\subsection{Homework}",
         paste0( "Homework \\#", cal_entry$homework_num, ": ", cal_entry$homework_topic,
                " is due today.  See the homework assignment sheet for details."),
         '', sep = '\n' )
}


make_notice <- function(notice_entries) {
  if (length(notice_entries) > 1) {
    output <- paste('\\subsection{Notices:}',
                    '\\begin{itemize}',
                    paste('\\item', notice_entries$notice,
                          sep = ' ', collapse = '\n'),
                    '\\end{itemize}',
                    '', sep = '\n')
  } else {
    output <- paste('\\subsection{Notice:}',
                    notice_entries$notice,
                    '', sep = '\n')
  }
  output
}

format_assignment_entry <- function(class_no) {
  cal_entry <- calendar %>% filter(class == class_no)
  hw_entry <- homework_assignments %>% filter(class == class_no)

  output <- make_hw_section(cal_entry)
  if (cal_entry$has_homework) {
    output <- paste(str_trim(output),
                    make_homework_assignment(hw_entry),
                    '', sep = '\n')
  }
  knit_expand(text = output, this_class_no = class_no,
              this_class_date = cal_entry$date,
              calendar = calendar,
              delim = c('<%','%>'))
}


format_class_entry <- function(class_no) {
  cal_entry <- calendar %>% filter(class == class_no)
  hw_entry <- homework_assignments %>% filter(class == class_no)
  reading_entry <- reading_assignments %>% filter(class == class_no)
  notice_entry <- notices %>% filter(class == class_no)

  output <- make_section(cal_entry)
  if (cal_entry$has_notice) {
    output <- paste(str_trim(output),
                    make_notice(notice_entry),
                    '', sep = '\n')
  }
  if (cal_entry$has_homework) {
    if(FALSE) {
      output <- paste(str_trim(output),
                      make_homework_assignment(hw_entry),
                      '', sep = '\n')
    } else {
      output <- paste(str_trim(output),
                      make_short_hw_assignment(cal_entry),
                      '', sep = '\n')
    }
  }
  if (cal_entry$has_reading) {
    output <-paste(str_trim(output),
                   make_reading_assignment(reading_entry),
                   '', sep = '\n')
  } else {
    # output <- paste0(str_trim(output),
    #                  '\\subsection{Reading}',
    #                  'No new reading for today.',
    #                  '', sep = '\n')
  }
  knit_expand(text = output, this_class_no = class_no,
              this_class_date = cal_entry$date,
              calendar = calendar,
              delim = c('<%','%>'))
}

@

\SetupHandout
\isbntrue

\renewcommand{\LongCourseName}{\ShortCourseName}%

\title{Syllabus\\
\ShortCourseNumber: \LongCourseName}

\fancyhead[L]{\bfseries\scshape \ShortCourseNumber\ Syllabus}

%
%
%
\begin{document}
\maketitle
\section[Nuts \& Bolts]{Nuts and Bolts}
\label{sec:NutsAndBolts}
\subsection{Class Meetings}
\ClassMeetings\\
Laboratory: \LabMeetings
\subsection{Professor}
\label{sec:Professor}
\ProfName\\
\ProfDescr\\
\ProfOffice,\\
\ProfPhone\\
\ProfEmail\\
\ProfWeb\\
\ProfOfficeHours
%
%To book time during my office hours, send me an email
%or make an appointment on line via Google calendar at
%\url{http://bit.ly/o9ka5e}

\subsection{Teaching Assistant}
\label{sec:TA}
\TaName\\
\TaOfficeLoc\ifTaPhone,\\
\TaPhone\fi\\
\TaEmail\\
\TaOfficeHours
\medskip

\noindent
\TaTitle\ will be grading labs and homework, so address questions about your homework and lab grades
to \TaAccusative.

\subsection{Email}
If you want to communicate with Professor Gilligan or \TaTitle\ be sure to begin the
subject line of your email with ``{\scshape EES~3310}'' or ``{\scshape EES~5310}''. This helps assure
that we will see your message quickly and respond to it.

I have set my email reader to flag all messages like this as important, so I will read
them first. This also assures that I do not mistake your email for spam. I typically
receive over 100 emails per day, so if you do not follow these instructions I may not
notice your email.

\medskip
\clearpage
\section[Description]{Course Description}
\subsection{Catalog Description}
Scientific principles and policy applications. Earth's past; evidence of human impact; future climate change; and economic, social, and ecological consequences. Economic, technological, and public policy responses. Repeat credit for 2110. Students who have earned credit for 2110 will earn only one credit hour for this course. Prerequisite: one of 1030, 1080, 1510, BSCI 1510, CHEM 1601, ECON 1010, ES 1401 or PHYS 1501, 1601, 1901. [4] (MNS)
\subsection{Narrative Description}
This course will study earth's climate and the way it has changed throughout our planet's
history. We will study:
\begin{itemize}
	\item Determinants of climate: What factors affect climate, how do we know this, and
    how certain are we?
    \item Scientific evidence about past climates: What do we know, how do we know it,
    and how certain are we?
	\item Natural climate change in earth's history.
	\item Effects of human activity on global climate in the last 200 years.
	\item What do we know about future climate change and how will it affect the quality
	of people's lives?
	\item How do economists and political scientists assess the costs of climate change
	and the value of policies to limit it?
	\item What can we do to mitigate future global climate change or adapt to life in a
	different climate?
	\item What is happening politically, both in the U.S. and internationally, to respond
	to climate change?
\end{itemize}

\section[Goals]{Goals for the Course}
My goals for this course are that at the end of the semester:
\begin{itemize}
\item You will have a solid quantitative understanding of the basic physical and chemical principles
that control the system and be able to apply that knowledge to reasoning about the climate system and its response to disturbances.
\item You will have working familiarity with a variety of computer models that simulate various aspects of the climate system
and be able to use those models to explore the implications of scientific principles that are too complex to calculate with pencil and paper.
\item You will have a solid scientific understanding of what scientists know, what they don't know,
and how they know what they know about how climate works, how and why it has changed in the past,
and how it may change in the future.
\item You will be able to evaluate the evidence for and against the idea that human
activity is warming the planet and assess for yourself whether the evidence is persuasive.
\item You will be familiar with the ways economists and policy analysts
approach the problem of climate change and public policies that respond to it.
\item You will understand the history of scientific and political concern and activity
around global warming, the principal policy measures being considered to address
climate change, and their major strengths and weaknesses.
\item You will have the tools and knowledge to make informed decisions about what
climate policies you support or oppose.
\item In the laboratory, you will learn to:
\begin{itemize}
\item Use simple climate models to explore the dynamics of the climate system.
\item Use open-source statistical tools to download and analyze real climate data.
\item Follow established reproducible research practices.
\end{itemize}
\end{itemize}

When you leave this course, you will not be qualified to work as a climate scientist, but
you will be able to follow and critically evaluate news
reporting about climate change and climate policy, debate intelligently and knowledgeably,
and be an informed voter.

I do not care whether you agree with me politically.
I respect people who think for themselves.
\textbf{What counts is whether you can present your own position clearly
and support it with solid evidence and reasoned argument.}
%
%
%
%\clearpage
\section{Important Dates:}
Many of you have athletic and other commitments during the term and may travel for
personal reasons. As you plan for your semester, particularly if you are purchasing
nonrefundable airplane tickets, consult the syllabus.

If you have away games that require you to miss a scheduled test or group laboratory activity, let me know well in advance.
\begin{itemize}
%
\item The mid-term test is on
\textbf{\Sexpr{format_day_date_range_by_event_id(calendar,
c('MIDTERM_EXAM','MIDTERM_TEST'),abbr_month = FALSE, abbr_wday = FALSE)}}.
\item The take-home final exam is due at \ifAltFinal
\textbf{\AltFinalExamEndTime~\AltFinalExamDay, \AltFinalExamMonth~\AltFinalExamDate}%
\else
\textbf{\FinalExamEndTime~\FinalExamDay, \FinalExamMonth~\FinalExamDate}%
\fi
. You submit the final exam electronically, so you do not need to be on campus
for this.
\end{itemize}
\iffalse

%from \FinalExamTime
The final exam will be \textbf{\FinalExamDay, \FinalExamMonth~\FinalExamDate}
from~\FinalExamTime
\ifAltFinal
\ and the alternate final exam is on \textbf{\AltFinalExamDay,
\AltFinalExamMonth~\AltFinalExamDate} from~\AltFinalExamTime
\fi
.
\textbf{Do not plan to leave for Christmas before the \ifAltFinal alternate \fi final exam.}
\fi
%
%
%
%
%
%\clearpage
\section[Structure]{Structure of the Course:}
I divide the semester into two parts:
\begin{enumerate}
    \item \textbf{Scientific Principles of Climate}: For the first half of the semester,
    we will focus on the scientific principles of climate and natural climate change in earth's
    past. This will be very mathematical, using basic algebra. We do not use calculus or
    other advanced math in this class, but you should be comfortable with simple algebraic
    equations.
    We will then
    %    \item \textbf{Scientific Evidence about Past and Future Climates:} The second third of the course will
    look at climate change in the last two centuries and what might
    happen over the next several centuries. We will emphasize examining the
    scientific evidence to understand what it can and cannot tell us.
    %
    \item \textbf{Human Dimensions of Climate Change: Politics, Economics, etc.:}
    For the second half of the semester, we will focus on the political, economic, and social aspects
    of climate change and possible public policy and technological responses.
\end{enumerate}
%
%
%
\subsection{Laboratory}
The laboratory section of this course is very important.
In the first half of the semester, you will use interactive computer models of the climate system to explore the implications of principles that we cover in class and in the reading,
practice downloading and analyzing real climate data, and
learning about best practices for reproducible research in order to make your work
reliable, reproducible, and trustworthy.
In the second half, you will use computational tools to explore the challenges of replacing fossil fuels with clean energy (renewable or nuclear), conduct quantitative economic analyses of different kinds of climate policies, and engage in role-playing exercises to simulate the way different climate policies work in practice.

To make the laboratory sessions effective, it is essential that you show up on time and prepared for the labs.

\subsection{Reading Material}
There are three required textbooks.
Supplementary reading on the Internet or in handouts will also be assigned during the term and posted on Brightspace.


\subsubsection[Required Reading]{Required Reading Materials}
\begin{itemize}
	%
	\item \LongArcher. Be sure you get the second edition because it is significantly different from the first.
	\item \LongNordhaus
	\item \LongPielke
\end{itemize}
There is a companion web site to \emph{\Archer\/} at \ArcherURL, which includes
%videos of the author's own lectures on the material and
interactive on-line computer models that we will use for some exercises in the
book.

\subsubsection{Overview of reading materials}
I will give out detailed reading that give specific pages to read for each class and notes
on important things you should understand.
\textbf{I expect you to complete the reading before you come to class on the day for which
the reading is assigned}, so you can participate in discussions of the assigned material
and ask questions if there are things you don't understand.

While science aims to give correct answers to scientific questions, there are
not right or wrong answers to questions of what is the best economic model with
which to assess the costs of climate change or the best policy with which
to respond to climate change, so I have chosen books and other reading material
that present different points of view on the political and economic aspects.
\iffalse

\subsubsection[Optional Reading]{Optional Supplementary Reading Materials}
See the ``External Links'' page on the course Brightspace site for links to optional
supplementary materials that you can read on-line or download free.
\fi

%\clearpage
\subsection{Graded Work}
%
%
%
\subsubsection[Grading]{Basis for Grading}
<<r grading, include=F>>=
grade_weights <- c(participation = 5, homework = 0, midterm = 30, lab = 33, final = 32)
assert_that(sum(grade_weights) == 100)
@
\begin{center}
	\begin{tabular}[t]{cr}
		Class participation & \Sexpr{grade_weights['participation']}\%\\
%		Homework & \Sexpr{grade_weights['homework']}\%\\
		Mid-term exam & \Sexpr{grade_weights['midterm']}\%\\
		Laboratory \& Homework & \Sexpr{grade_weights['lab']}\%\\
		Final exam   & \Sexpr{grade_weights['final']}\%\\
	\end{tabular}
\end{center}
%
%
%
%
\iffalse
\subsubsection{Homework}
Homework is due at the beginning of class on the day it is assigned.
Late homework will be accepted for half-credit if I receive it before I post the answer key on Brightspace (usually a week after the assignment is due).
\fi
%
%\subsubsection{Projects}
% You will do a few extended projects, which constitute policy analyses of possible measures to reduce greenhouse gas emissions.

\subsubsection{Tests and Examinations}
There will be one in-class midterm exam, on
\textbf{\Sexpr{format_day_date_range_by_event_id(calendar, c('MIDTERM_EXAM','MIDTERM_TEST'),
                abbr_month = FALSE, abbr_wday = FALSE)}}.
This test will be closed book.
I will hold a review session before the test.
\textbf{You will need to bring a calculator, number two pencils, and erasers
to the in-class test.}

\subsubsection{Final Examination:}
There will be an open-book take-home final exam, for which you may use your books and notes.
You will submit your take-home final electronically. It will be due at the end
of the scheduled \ifAltFinal alternate \fi final examination,
\ifAltFinal \AltFinalExamEndTime\ \AltFinalExamDay\ \AltFinalExamMonth~\AltFinalExamDate \else
\FinalExamEndTime\ \FinalExamDay\ \FinalExamMonth~\FinalExamDate \fi.
%
%You may take either the regular or the alternate final exam (but not both). You must tell me in advance which exam you will take. I will pass a sign-up sheet in class during the last week of classes to sign up for which exam you will take. If you do not choose on the sign-up sheet, you must take the regular exam on \FinalExamDay, \FinalExamMonth.~\FinalExamDate.
%\else
%There will not be an alternate final exam.
%\fi

The final exam will be cumulative over all the material covered during the term.

%\clearpage
\section{Honor Code:}
This course, like all courses at Vanderbilt, is conducted under the Honor Code.

I encourage you to to seek help from me, from \TaTitle,
or from other classmates or friends in your studying. I also encourage working together
on lab and homework assignments: you may talk with your friends and classmates about
those assignments, compare notes on how you are working a problem, and you
may look at your classmates' work.
But you must work through the problems yourself
in the work you turn in: \textbf{Even if you have discussed the solution with others you must
work through the steps yourself and express the answers in your own words. You may not
simply copy someone else's answer.}

Tests are different from homework and labs: \textbf{%
%all work you turn in and
all work on tests and exams must be entirely your own}.
\textbf{You may not work together with anyone or receive any help from anyone but me
% or \TaTitle\
on exams and tests (this includes take-home exams and tests)}.

\iffalse
Writing assignments will contain instructions how the honor code applies.
\fi
If you ever
have questions about how the Honor Code applies to your work
in this course, please ask me.
\textbf{Uncertainty about the Honor Code does not excuse a violation.}
\section{Final Note:}
I have made every effort to plan a busy, exciting, and instructive semester.
I may find during the term that I need to revise the syllabus to give more time
to some subjects or to pass more quickly over others rather than covering them
in depth. Many topics we will cover are frequently in the news. Breaking news
may warrant a detour from the schedule presented on the following pages.
Thus, while I will attempt to follow this syllabus as closely as I can,
you should realize that it is subject to change during the semester.
%
%
\pagebreak
\section{Meet Your Professor}
Jonathan Gilligan has worked in many areas of science and public policy.
His past research includes work on laser physics, quantum optics,
laser surgery, electrical properties of the heart, using modified spy planes to 
study the ozone layer in the stratosphere, and connections between religion and 
care for the environment.
\iffalse

Professor Gilligan joined the Vanderbilt Faculty in 1994 as a member of the
Department of Physics and Astronomy. In 2003, when the Department of Geology
became the Department of Earth and Environmental Science, Professor Gilligan
joined the new department to focus on atmospheric science, global climate change,
and the interactions of politics, ethics, religion, communication, and the
environment.
\fi

Professor Gilligan is a member of the Vanderbilt Institute for Energy and Environment,
a founding member of the Vanderbilt Initiative for Smart-City Operations Research (VISOR),
a founding member of the Erd\H{o}s institute for Collaboration, Innovation, and
Entrepreneurship,
and the Associate Director for Research at the Vanderbilt Climate Change Research Network.

His current research investigates the role of individual and household behavior
in greenhouse gas emissions in the United States;
how ``smart cities'' can use technology to reduce environmental footprints and
promote health and citizen empowerment;
water conservation policies in American cities;
vulnerability and resilience to environmental stress in Bangladesh;
adaptation to water scarcity in Sri Lanka;
and developing new directions for climate policy in the US.

In 2017, Professor Gilligan and Professor Michael Vandenbergh shared
the Morrison Prize for the highest-impact paper on sustainability law and
policy published in the previous year. Professors Gilligan and Vandenbergh
have developed this work into a book, \emph{Beyond Politics: The Private 
Governance Approach to Climate Change\/} (Cambridge University Press, 2017).

Apart from his academic work, Professor Gilligan dabbles in writing for the 
theater. His stage adaptation of Nathaniel Hawthorne's \emph{The Scarlet Letter}, 
co-written with his mother Carol Gilligan, has been staged at The Culture 
Project in New York City, starring 
Marisa Tomei, Ron Cephas Jones, and Bobby Cannavale, and was later performed 
at Prime Stage Theatre, Pittsburgh and in a touring production by The National 
Players.
Prof.\ Gilligan and Carol Gilligan also wrote the libretto for an opera,  
\emph{Pearl}, in collaboration composer Amy Scurria, and producer/conductor 
Sara Jobin, which was performed at Shakespeare \& Company in Lenox MA,
starring Maureen O'Flynn, John Bellemer, Marnie Breckenridge, John Cheek,
and Michael Corvino, and in Shanghai China,
% as part of a cultural exchange,
starring Li Xin, Wang Yang, John Bellemer, and Lin Shu.
%
%
%
%
%
%
%\end{document}

%\cleardoublepage
\clearpage
\appendix
\setcounter{secnumdepth}{0}
\newcommand{\maybehline}{\hline}%
\setlength\extrarowheight{4pt}
\section[Class Schedule]{Schedule of Classes
\ifrevised
	(Revised \RevisionDate)%
\else
	(Subject to Change)%
\fi}

\textbf{\scshape Important Note:} This schedule gives a rough indication of the 
reading for each day. See the assignment sheets posted on Brightspace for the 
detailed daily assignments.

\setlength{\aboverulesep}{0.2ex}
\setlength{\belowrulesep}{0.2ex}
\setlength{\extrarowheight}{0.1ex}
\setlength{\heavyrulewidth}{0.5pt}
\setlength{\lightrulewidth}{0.05pt}
\begin{center}
<<r class_schedule, echo=F, results='asis'>>=
one_line_events <- c('FALL_BREAK','MIDTERM_TEST','MIDTERM_EXAM')

finals <- bind_rows(final_exam, alt_final_exam) %>% arrange(date)
which_final <- tail(finals, 1)$event
delete_final <- head(finals,-1)$event
schedule <- calendar %>% arrange(date) %>%
  mutate(wday = paste0(wday(date, label = T, abbr=T), '.,'), month = paste0(month(date, label = T, abbr=T), '.'),
         day = day(date), reading = str_trim(reading), event = ifelse(is.na(event), '', event), foo = NA) %>%
  select(wday, month, day, topic, reading, event, foo)

events <- schedule$event

fall_break_row <- which(events == 'FALL_BREAK')
special_rows <- which(events %in% one_line_events)

# schedule_break_row <- fall_break_row
schedule_break_row <- with(schedule, which(month == "Oct." & day == 15))

special_rows_1 <- special_rows %>% keep(~.x <= schedule_break_row)
special_rows_2 <- special_rows %>% discard(~.x %in% special_rows_1)
special_rows_2 <- special_rows_2 - schedule_break_row

schedule_1 <- schedule[1:schedule_break_row,]
schedule_1[special_rows_1,] <- schedule_1[special_rows_1,] %>%
  mutate(topic = paste0('\\multicolumn{2}{l}{\\bfseries\\scshape\\large ', topic, '} & \\\\%'))
schedule_1 <- schedule_1 %>% select(-event)

schedule_1 %>% xtable(align = c("","l@{~}","c@{~}","r",">{\\raggedright}m{2.6in}",">{\\centering}m{2in}", "c")) %>%
  print(booktabs = TRUE, floating = FALSE, latex.environment='center',
        sanitize.text.function = identity,
        include.colnames = F, include.rownames = F,
        hline.after = seq(-1,nrow(schedule_1)),
        add.to.row = list(pos = list(0),
                          command = '\\multicolumn{3}{c}{\\bfseries Date} & \\multicolumn{1}{c}{\\bfseries Topic} &\\multicolumn{1}{c}{\\bfseries Reading} &\\\\\n'))
@
\end{center}

\begin{center}
<<r class_schedule_2, echo=F, results='asis'>>=
schedule_2 <- schedule[-(1:schedule_break_row),]
schedule_2[special_rows_2,] <- schedule_2[special_rows_2,] %>%
  mutate(topic = paste0('\\multicolumn{2}{l}{\\bfseries\\scshape\\large ', topic, '} & \\\\%'))
in_class_ex_line <- which(schedule_2$event %in% c('IN_CLASS_EXERCISE'))
schedule_2[in_class_ex_line,] <- schedule_2[in_class_ex_line,] %>%
  mutate(topic = paste0('\\bfseries\\scshape ', topic))
thanksgiving_rows <- which(schedule_2$event %in% c('THANKSGIVING_BREAK'))
schedule_2$topic[thanksgiving_rows] <- ''
schedule_2$topic[min(thanksgiving_rows)] <- '\\multicolumn{2}{l}{\\multirow{3}{*}{\\bfseries\\scshape\\Large Thanksgiving Break}} & \\\\%'
final_exam_row <- which(schedule_2$event == which_final)
schedule_2$topic[final_exam_row] <- '\\multicolumn{2}{l}{\\bfseries\\scshape\\large Take-Home Final Exam Due} & \\\\%'
schedule_2 <- schedule_2 %>% filter(! event %in% delete_final) %>% select(-event)

schedule_2 %>% xtable(align = c("","l@{~}","c@{~}","r",">{\\raggedright}m{2.6in}",">{\\centering}m{2in}", "c")) %>%
  print(booktabs = TRUE, floating = FALSE,  latex.environment="center",
        sanitize.text.function = identity, include.colnames = F, include.rownames = F,
        hline.after = discard(seq(-1,nrow(schedule_2)), ~.x %in% head(thanksgiving_rows,-1)),
        add.to.row = list(pos = list(0),
                          command = '\\multicolumn{3}{c}{\\bfseries Date} & \\multicolumn{1}{c}{\\bfseries Topic} &\\multicolumn{1}{c}{\\bfseries Reading} &\\\\\n'))
@
\end{center}
%
\end{document}
